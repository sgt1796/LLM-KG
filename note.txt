python fetch_ncbi.py --csv csv-adhd-set.csv --out papers_ADHD

bash sample_papers.sh 50 papers_ADHD sampled_papers # sample papers
python main.py --pdf sampled_papers --output graph.json # retrive KG from papers
python dedupe.py --input graph.json --output graph_clean.json --spacy-model en_core_sci_sm --min-support 3 --verbose-every 5000
python KG_visualizer.py --k-core 4 --max-nodes 200 --label-top 20 --min-weight 3 --largest-only --input graph_clean.json
python KG_visualizer.py --k-core 3 --max-nodes 300 --label-top 10 --highlight-edges-top 20 --edge-labels-top 10 --min-weight 50 --input graph_clean.json --layout spring --largest-only

II. SUD KG building
1. python fetch_ncbi.py --csv csv-substanceu-set.csv --out papers_SUD --n 5000
2. bash sample_papers.sh 50 papers_SUD sampled_papers # sample papers
3. python main.py --pdf sampled_papers --output graph_ADHD_SUD.json --merge graph.json # retrive KG from papers, merge with ADHD KG
4. python dedupe.py --input graph_ADHD_SUD.json --output graph_clean.json --spacy-model en_core_sci_sm --min-support 3 --verbose-every 50000

python KG_visualizer.py --k-core 3 --max-nodes 300 --label-top 10 --highlight-edges-top 20 --edge-labels-top 10 --min-weight 50 --input graph_clean.json --layout spring --largest-only
python pyvis_view.py --input graph_clean_ADHD_SUD.json --html graph_viz.html --min-weight 30 --k-core 3 --max-nodes 300 --label-top 10
python pyvis_view.py --input graph_clean_ADHD_SUD.json --html graph_viz.html --weight "3-58" --k-core 2 --max-nodes 500 --max-edges 400 --label-top 20 --physics random